{"version":3,"sources":["webpack:///./ngStoreClient/$_lazy_route_resource lazy namespace object","webpack:///./ngStoreClient/app/app.component.html","webpack:///./ngStoreClient/app/app.component.ts","webpack:///./ngStoreClient/app/app.module.ts","webpack:///./ngStoreClient/app/cart/cart.component.html","webpack:///./ngStoreClient/app/cart/cart.component.ts","webpack:///./ngStoreClient/app/cart/cartList.component.html","webpack:///./ngStoreClient/app/cart/cartList.component.ts","webpack:///./ngStoreClient/app/order/order.ts","webpack:///./ngStoreClient/app/order/orderItem.ts","webpack:///./ngStoreClient/app/product/product.component.html","webpack:///./ngStoreClient/app/product/product.component.ts","webpack:///./ngStoreClient/app/product/productList.component.html","webpack:///./ngStoreClient/app/product/productList.component.ts","webpack:///./ngStoreClient/app/services/cartService.ts","webpack:///./ngStoreClient/app/services/loginService.ts","webpack:///./ngStoreClient/app/services/orderService.ts","webpack:///./ngStoreClient/app/services/productService.ts","webpack:///./ngStoreClient/app/shared/yesno.pipe.ts","webpack:///./ngStoreClient/environments/environment.ts","webpack:///./ngStoreClient/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./ngStoreClient/$$_lazy_route_resource lazy recursive\";","module.exports = \"<router-outlet></router-outlet>\\r\\n\\r\\n\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'the-store',\r\n  templateUrl: \"./app.component.html\",\r\n  styles: []\r\n})\r\nexport class AppComponent {\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { APP_BASE_HREF } from '@angular/common';\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\n\r\nimport { RouterModule } from \"@angular/router\";\r\n\r\nimport { AppComponent } from \"./app.component\";\r\nimport { ProductRoot } from \"./product/product.component\";\r\nimport { CartRoot } from \"./cart/cart.component\";\r\nimport { ProductList } from \"./product/productList.component\";\r\nimport { CartList } from \"./cart/cartList.component\";\r\nimport { ProductService } from \"./services/productService\";\r\nimport { OrderService } from \"./services/orderService\";\r\nimport { LoginService } from \"./services/loginService\";\r\nimport { CartService } from \"./services/cartService\";\r\nimport { YesNoBooleanPipe } from './shared/yesno.pipe';\r\n\r\nlet routes = [\r\n    { path: \"Product\", component: ProductRoot },\r\n    { path: \"Cart\", component: CartRoot }\r\n];\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        ProductRoot,\r\n        CartRoot,\r\n        ProductList,\r\n        CartList,\r\n        YesNoBooleanPipe\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        HttpClientModule,\r\n        RouterModule.forRoot(routes)\r\n    ],\r\n    exports: [\r\n        RouterModule,\r\n        YesNoBooleanPipe\r\n    ],  \r\n    providers: [\r\n        { provide: APP_BASE_HREF, useValue: '/' },\r\n        ProductService,\r\n        OrderService,\r\n        LoginService,\r\n        CartService\r\n    ],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-9\\\">\\r\\n        <h3>{{ title }}</h3>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<cart-list></cart-list>\\r\\n\"","﻿import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: \"cart-root\",\r\n    templateUrl: \"cart.component.html\",\r\n    styleUrls: []\r\n})\r\nexport class CartRoot {\r\n    title = \"Cart\"\r\n}\r\n\r\n\r\n","module.exports = \"<div *ngIf=\\\"order.orderItems.length > 0\\\">\\r\\n    <div>#/Items: {{ order.orderItems.length }}</div>\\r\\n    <div>Subtotal: {{ order.subtotal | currency:\\\"USD\\\":\\\"symbol\\\" }}</div>\\r\\n    <table class=\\\"table table-condensed table-hover\\\">\\r\\n        <thead>\\r\\n            <tr>\\r\\n                <td>Product</td>\\r\\n                <td>Package</td>\\r\\n                <td>#</td>\\r\\n                <td>$</td>\\r\\n                <td>Total</td>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n            <tr *ngFor=\\\"let o of order.orderItems\\\">\\r\\n                <td>{{ o.product.productName }}</td>\\r\\n                <td>{{ o.product.package }}</td>\\r\\n                <td>{{ o.quantity }}</td>\\r\\n                <td>{{ o.unitPrice | currency:\\\"USD\\\":\\\"symbol\\\" }}</td>\\r\\n                <td>{{ (o.unitPrice * o.quantity) | currency:\\\"USD\\\":\\\"symbol\\\" }}</td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n    <button class=\\\"btn btn-success\\\" (click)=\\\"onCheckout()\\\">Checkout</button>\\r\\n</div>\\r\\n<div *ngIf=\\\"order.orderItems.length == 0\\\">\\r\\n    <div>You cart is empty</div>\\r\\n</div>\\r\\n\"","﻿import { Component, OnInit } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\n\r\nimport { LoginService } from \"../services/loginService\";\r\nimport { CartService } from \"../services/cartService\";\r\nimport { OrderService } from '../services/orderService';\r\nimport { Order } from '../order/order';\r\n\r\n@Component({\r\n    selector: \"cart-list\",\r\n    templateUrl: \"cartList.component.html\",\r\n    styleUrls: []\r\n})\r\nexport class CartList implements OnInit {\r\n\r\n    public order: Order;\r\n\r\n    constructor(public loginService: LoginService, public orderService: OrderService, private router: Router) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.getOrder();\r\n    }\r\n\r\n\r\n    onCheckout() {\r\n        if (this.loginService.loginRequired) {\r\n            // Force Login\r\n            this.router.navigate([\"login\"]);\r\n        } else {\r\n            // Go to checkout\r\n            this.router.navigate([\"checkout\"]);\r\n        }\r\n    }\r\n\r\n    getOrder() {\r\n        this.orderService.subject.subscribe(o => this.order = o);\r\n        console.log(this.orderService.subject.value);\r\n        //this.order = this.orderService.getOrder();\r\n    }\r\n}\r\n","﻿import { OrderItem } from '../order/orderItem';\r\n\r\nexport class Order {\r\n    orderId: number;\r\n    orderDate: Date = new Date();\r\n    orderNumber: string;\r\n    customerId: number;\r\n    totalAmount: number;\r\n    orderItems: Array<OrderItem> = new Array <OrderItem>();\r\n\r\n    get subtotal(): number {\r\n        var sum = 0;\r\n        for (var i = 0; i < this.orderItems.length; i++) {\r\n            sum += this.orderItems[i].unitPrice * this.orderItems[i].quantity;\r\n        }\r\n        return sum;\r\n    };\r\n}","﻿import { Product } from '../product/product';\r\nimport { Order } from '../order/order';\r\n\r\nexport class OrderItem {\r\n    id: number;\r\n    order: Order;\r\n    product: Product;\r\n    unitPrice: number;\r\n    quantity: number;\r\n}","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-9\\\">\\r\\n        <h3>{{ title }}</h3>\\r\\n    </div>\\r\\n</div>\\r\\n<product-list></product-list>\\r\\n\"","﻿import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: \"product-root\",\r\n    templateUrl: \"product.component.html\",\r\n    styleUrls: []\r\n})\r\nexport class ProductRoot {\r\n    title = \"Products\"\r\n}\r\n\r\n\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n            <div class=\\\"table-responsive-md\\\">\\r\\n                <table class=\\\"table table-striped\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th scope=\\\"col\\\"></th>\\r\\n                            <th scope=\\\"col\\\">Product</th>\\r\\n                            <th scope=\\\"col\\\">Package</th>\\r\\n                            <th scope=\\\"col\\\">Supplier</th>\\r\\n                            <th scope=\\\"col\\\">Discontinued</th>\\r\\n                            <th scope=\\\"col\\\" class=\\\"text-center\\\">Quantity</th>\\r\\n                            <th scope=\\\"col\\\" class=\\\"text-right\\\">Price</th>\\r\\n                            <th scope=\\\"col\\\"></th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr *ngFor=\\\"let p of products\\\"> \\r\\n                            <td><img src=\\\"https://dummyimage.com/50x50/55595c/fff\\\" /> </td>\\r\\n                            <td>{{p.productName}}</td>\\r\\n                            <td>{{p.package}}</td>\\r\\n                            <td>{{p.supplier.companyName}}</td>\\r\\n                            <td>{{p.discontinued | yesnoBoolean}}</td>\\r\\n                            <td><input id=\\\"quantity\\\" class=\\\"form-control\\\" type=\\\"text\\\" value=\\\"1\\\" /></td>\\r\\n                            <td>{{p.unitPrice | currency:\\\"USD\\\":\\\"symbol\\\"}}</td>\\r\\n                            <td class=\\\"text-right\\\"><button class=\\\"btn btn-sm btn-success\\\" [disabled]=\\\"p.Discontinued\\\" (click)=\\\"addProduct(p, 1)\\\">Buy</button> </td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n        <!--</div>-->\\r\\n    </div>\\r\\n</div>\\r\\n\"","﻿import { Component, OnInit } from \"@angular/core\";\r\n\r\nimport { Product } from './product';\r\nimport { ProductService } from '../services/productService';\r\nimport { OrderService } from '../services/orderService';\r\nimport { Order } from '../order/order';\r\nimport { OrderItem } from '../order/orderItem';\r\n\r\n@Component({\r\n    selector: \"product-list\",\r\n    templateUrl: \"productList.component.html\",\r\n    styleUrls: [],\r\n})\r\nexport class ProductList implements OnInit {\r\n\r\n    public products: Product[] = [];\r\n\r\n    constructor(private productService: ProductService, private orderService: OrderService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.productService.getProducts()\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    this.products = this.productService.products;\r\n                }\r\n            });\r\n\r\n    }\r\n\r\n    addProduct(product: Product, quantity: number) {\r\n        this.orderService.addToOrder(product, quantity);\r\n    }\r\n}\r\n","﻿import { Injectable } from \"@angular/core\";\r\nimport { Order } from '../order/order';\r\nimport { OrderService } from './orderService';\r\n\r\n@Injectable()\r\nexport class CartService {\r\n\r\n    public order: Order;\r\n\r\n    constructor(public orderService: OrderService) {\r\n        this.getOrder();\r\n    }\r\n\r\n    getOrder() {\r\n        this.orderService.subject.subscribe(o => this.order = o);\r\n    }\r\n}\r\n","﻿import { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\r\nexport class LoginService {\r\n    private token: string = \"\";\r\n    private tokenExpiration: Date = new Date();\r\n\r\n    public get loginRequired(): boolean {\r\n        return this.token.length == 0 || this.tokenExpiration < new Date();\r\n    }\r\n}\r\n","﻿import { Injectable } from \"@angular/core\";\r\nimport { Order } from '../order/order';\r\nimport { Product } from '../product/product';\r\nimport { OrderItem } from '../order/orderItem';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class OrderService {\r\n\r\n    private order: Order;\r\n    public subject: BehaviorSubject<Order>;\r\n\r\n    constructor() {\r\n        if (this.order === undefined) {\r\n            this.order = new Order();\r\n            this.subject = new BehaviorSubject(this.order);\r\n            this.subject.asObservable();\r\n            console.log(\"new order: \" + this.order)\r\n        }\r\n    }\r\n\r\n    public getOrder(): Order {\r\n        return this.order;\r\n    }\r\n\r\n    addToOrder(product: Product, quantity: number) {\r\n        var item: OrderItem = new OrderItem();\r\n        item.product = product;\r\n        item.order = this.order;\r\n        item.unitPrice = product.unitPrice;\r\n        item.quantity = quantity;\r\n        this.order.orderItems.push(item);\r\n        this.subject.next(this.order);\r\n        console.log(this.order);\r\n    }\r\n}\r\n","﻿import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\"\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { Product } from '../product/product';\r\n\r\n@Injectable()\r\nexport class ProductService {\r\n\r\n    public products: Product[] = [];\r\n\r\n    constructor(private http: HttpClient) {\r\n\r\n    }\r\n\r\n    getProducts(): Observable<boolean> {\r\n        return this.http.get(\"/api/products\")\r\n            .pipe(\r\n                map((data: any[]) => {\r\n                    this.products = data;\r\n                    return true;\r\n                }));\r\n    }\r\n}\r\n","﻿import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'yesnoBoolean' })\r\nexport class YesNoBooleanPipe implements PipeTransform {\r\n    transform(value: boolean): string {\r\n        return value == true ? 'Yes' : 'No'\r\n    };\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}